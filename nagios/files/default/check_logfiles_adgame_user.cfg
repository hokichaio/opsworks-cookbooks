my $crit_flag = 0;
my $flag = 0;
my $ad_flag = 0;
my @crit_logs = ();
$options='report=long,maxlength=16384,supersmartpostscript';
$MACROS = {
  APLOGDIR => '/var/www/projects/adgame-user/current/log'
};
@searches = ({
  tag => 'AdgameUserError',
  rotation => 'loglogdate8',
  logfile => '$APLOGDIR$/app.log',
  criticalpatterns => '.*',
  options => 'script,noprotocol',
  script => sub {
    my $C_AFTER_LINES = 3;
    my $line = $ENV{CHECK_LOGFILES_SERVICEOUTPUT};

    # Global Variable
    # $flag : 0=> no_print, 1=> print
    # $service_state id : 0=>OK, 1=>WARN, 2=>CRIT, 3=>UNKNOWN
    
    $flag++ if $flag;
    if ( ($line =~ /(FATAL|ERROR)/) && ($line !~ /InvalidAd/) ) {
      # CRITICAL
      $crit_flag++;
      $flag = 1;
      push(@crit_logs,$line);
    } elsif (!$flag || $flag > $C_AFTER_LINES+1) {
      # reset flag and state
      $flag = 0;
    } else {
      # Crit or Warn , after lines
      push(@crit_logs,$line);
    }
  }
},
{
  tag => 'InvalidAd',
  rotation => 'loglogdate8',
  logfile => '$APLOGDIR$/app.log',
  criticalpatterns => '.*',
  options => 'script,noprotocol',
  script => sub {
    my $C_AFTER_LINES = 3;
    my $line = $ENV{CHECK_LOGFILES_SERVICEOUTPUT};

    # Global Variable
    # $flag : 0=> no_print, 1=> print
    # $service_state id : 0=>OK, 1=>WARN, 2=>CRIT, 3=>UNKNOWN
    
    $flag++ if $flag;
    if ( ($line =~ /ERROR/) && ($line =~ /InvalidAd/) ) {
      # CRITICAL
      $ad_flag++;
      $crit_flag++ if $ad_flag > 1;
      $flag = 1;
      push(@crit_logs,$line);
    } elsif (!$flag || $flag > $C_AFTER_LINES+1) {
      # reset flag and state
      $flag = 0;
    } else {
      # Crit or Warn , after lines
      push(@crit_logs,$line);
    }
  }
});
$postscript = sub {
  if ($crit_flag) {
    print join("\n",@crit_logs)."\n";
    return 2;
  } else {
    print $ENV{CHECK_LOGFILES_SERVICEPERFDATA};
    return 0;
  }
};
